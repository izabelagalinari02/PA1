
README file
========================================

Your directory should now contain the following files:

	 Makefile
	 README
	 atoi.cl 
	 stack.cl
	 stack.test 

	The Makefile contains targets for compiling and running your
	program, as well as handing it in.

	The README contains this info. Part of the assignment is to
	answer the questions at the end of this README file.
	Just edit this file.

	atoi.cl is an implementation in Cool of the string to integer
	conversion function known from the C language.

	stack.cl is the skeleton file which you should fill in with
	your program.

	stack.test is a short test input to the stack machine. It is
	run through your program when you hand it in, and the output
	is also	handed in.


        The symlinked files (see "man ln") are that way to emphasize
        that they are read-only -- when we test your program, we already
        have our own versions.


Instructions
------------

	To compile and run your program, type:

	% gmake test

        Try it now -- it should work, and print "Nothing implemented"
        (among a few other things).


        To simply compile your program, type

        % gmake compile


	Instructions for turning in the assignment will be posted on the
	course web page.

	GOOD LUCK!

---8<------8<------8<------8<---cut here---8<------8<------8<------8<---

Questions
----------------

1. Describe your implementation of the stack machine in a single short
   paragraph.

   Minha máquina de pilha envolve a criação da classe 
   `StackCommand` e suas subclasses, cada uma tem as operações necessárias
   para execução do exercício.


2. List 3 things that you like about the Cool programming language.

	- Que ela é fortemente tipada, ajudando para não ter muitos erro de compilação.
	- Também que é orientada a objetos, herança e polimorfismo.
	- E também gosto por ser uma linguagem fácil de aprender e com uma didática simples.

3. List 3 things you DON'T like about Cool.
	
	- A eficiência e a performance do código podem ser inferiores às linguagens de programação otimizadas.
	- Achei a depuração de erros bem limitada, o console apenas indica onde está o 
	erro durante a exucução, dificultando muito para achar o erro.
	- Usar -> ao inves de =, me confundiu um pouco..
